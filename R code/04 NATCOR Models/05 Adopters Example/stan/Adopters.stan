// Code generated by the R package readsdr v0.3.0
// See more info at github https://github.com/jandraor/readsdr
functions {
  vector X_model(real time, vector y, array[] real params) {
    vector[3] dydt;
    real AR;
    real ITA;
    AR = params[1]*y[2]*y[1]/10000;
    ITA = AR;
    dydt[1] = -AR;
    dydt[2] = AR;
    dydt[3] = ITA;
    return dydt;
  }
}
data {
  int<lower = 1> n_obs;
  array[n_obs] int Adoptions;
  array[n_obs] real ts;
  vector[3] x0;
}
parameters {
  real<lower = 0> Effective_Contacts;
}
transformed parameters{
  array[n_obs] vector[3] x; // Output from the ODE solver
  array[1] real params;
  array[n_obs] real delta_x_1;
  params[1] = Effective_Contacts;
  x = ode_rk45(X_model, x0, 0, ts, params);
  delta_x_1[1] =  x[1, 3] - x0[3] + 1e-5;
  for (i in 1:n_obs-1) {
    delta_x_1[i + 1] = x[i + 1, 3] - x[i, 3] + 1e-5;
  }
}
model {
  Effective_Contacts ~ lognormal(0, 1);
  Adoptions ~ poisson(delta_x_1);
}
generated quantities {
  real log_lik;
  array[n_obs] int sim_Adoptions;
  log_lik = poisson_lpmf(Adoptions | delta_x_1);
  sim_Adoptions = poisson_rng(delta_x_1);
}
